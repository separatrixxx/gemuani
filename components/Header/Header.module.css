.header {
	position: fixed;
	z-index: 2;

	display: grid;
	align-items: center;

	width: 100%;
	padding: 10px 0 10px 0;

	background: var(--white);
	filter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08));
	grid-template-columns: 200px auto 200px;
	justify-items: center;
	grid-template-areas: ". headerBlock .";
}

.logo {
	width: 100px;

	cursor: pointer;
	justify-self: right;
}

.logo svg {
	fill: var(--white);

	transition-duration: 300ms;
}

.headerBlock {
	display: grid;
	gap: 40px;

	align-items: center;
	justify-items: center;
	grid-area: headerBlock;
}

.text {
	padding: 5px;

	cursor: pointer;
	transition-duration: 300ms;

	color: var(--dark) !important;

	font-weight: 700;
}

.text:active {
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

	color: var(--accent) !important;
}

.textArrow {
	display: grid;
	grid-template-columns: 1fr auto;
	gap: 7px;

	align-items: center;
}

.arrow {
	display: grid;

	margin-bottom: 1px;
}

.arrow > svg {
	height: 4px;

	transition-duration: 300ms;
	fill: var(--darK);
}

.textArrow:active > span > svg {
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

	fill: var(--dark) !important;
}

.textArrow:active {
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

	color: var(--accent) !important;
}

.moreDiv {
	position: relative;
}

.hiddenLinks {
	position: absolute;
	left: 0;

	display: grid;

	width: 180px !important;
	margin-top: 160px;
	padding: 10px 15px 10px 15px;

	cursor: default;

	border-radius: 10px;
	background: var(--white);
}

.hiddenText {
	width: fit-content;

	cursor: pointer;
	transition-duration: 300ms;

	color: var(--dark);
}

.hiddenText:active {
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

	color: var(--light) !important;
}

.openOrLang {
	display: grid;
	grid-template-columns: 1fr auto auto;

	align-items: center !important;
	gap: 30px;

	width: 100%;
	justify-items: end;
}

.relativeLink {
	position: relative;
}

.shopLink {
	padding: 5px 15px;

	color: var(--white) !important;
	border-radius: 9999px;
	background: var(--accent);
}

.shopLink:active {
	transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
		
	filter: brightness(0.9);
	color: var(--white) !important;
}

@media (min-width: 1024px) {
	.text:hover {
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

		color: var(--accent) !important;
	}

	.text:hover > h1 {
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

		color: var(--accent) !important;
	}

	.shopLink:hover {
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

		filter: brightness(0.9);
		color: var(--white) !important;
	}

	.textArrow:hover > span > svg {
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

		fill: var(--accent) !important;
	}

	.hiddenText:hover {
		transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

		color: var(--darkLight) !important;
	}

	.shopLink::after,
	.shopLink::before {
		content: '';
		position: absolute;
		border: 2px solid var(--accent);
		opacity: 0;
		left: -20px;
		right: -20px;
		top: -10px;
		bottom: -10px;
		border-radius: 9999px;
		animation: pulse 2.5s linear infinite;
	}

	.shopLink::after {
		animation-delay: 1.25s;
	}

	@keyframes pulse {
		0% {
		transform: scale(0.5);
		opacity: 0;
		}
		50% {
		opacity: 1;
		}
		100% {
		transform: scale(0.9);
		opacity: 0;
		}
	}
}

@media (max-width: 1024px) {
	.header {
		grid-template-columns: auto auto;
		grid-template-areas:
			". ."
			"headerBlock headerBlock";
	}

	.headerBlock {
		grid-template-columns: auto;
		grid-template-rows: auto auto auto s;
		gap: 0 !important;

		padding: 20px 0 0 20px !important;
		justify-self: left;
		justify-items: left;
	}

	.text {
		margin: 5px 0 5px 0 !important;
	}

	.logo {
		width: 100px;
		height: 30px;

		justify-self: left;

		margin-left: 20px;
	}

	.arrow {
		display: none;
	}

	.textArrow {
		grid-template-columns: auto;
	}

	.hiddenLinks {
		position: relative !important;

		display: grid !important;

		margin: 0;
		margin-left: 10px;
		padding: 0;

		border-radius: 0;
		background: none;
	}

	.hiddenText {
		color: var(--dark) !important;
	}
}
